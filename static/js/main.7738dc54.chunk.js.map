{"version":3,"sources":["components/kyojin/model.ts","components/kyojin/types.ts","components/app/TaskAdd.tsx","components/kyojin/tasks.ts","components/app/DayCard.tsx","components/app/DayList.tsx","components/app/Raw.tsx","components/app/taskeditor/AudioTaskEditor.tsx","components/app/taskeditor/TextTaskEditor.tsx","components/app/taskeditor/ImageTaskEditor.tsx","components/app/taskeditor/TestTaskEditor.tsx","components/app/taskeditor/QuickTestTaskEditor.tsx","components/app/KyojinEditor.tsx","components/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["KyojinTypeVersion","tr_TaskType","tt","tr_TextContentType","tr_TextType","TaskAdd","props","React","useState","anchorEl","setAnchorEl","Box","Typography","variant","IconButton","edge","aria-label","onClick","event","currentTarget","title","Menu","id","keepMounted","open","Boolean","onClose","map","t","MenuItem","item","onAddTask","disabled","taskDescription","task","tasktype","type","DayCard","Card","CardHeader","action","dayNumber","CardContent","dayTasks","tasks","taskId","found","allTasks","find","desc","Chip","size","onDelete","onRemoveTask","label","filter","includes","DayList","Paper","elevation","TextField","helperText","value","daysCount","onChange","onDaysCount","Number","target","inputProps","min","max","InputLabelProps","shrink","Grid","container","spacing","alignItems","daysArray","d","index","xs","sm","onAddDayTask","onRemoveDayTask","Raw","setOpen","rawValue","setRawValue","Tooltip","aria-haspopup","color","raw","Dialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","fullWidth","aria-labelledby","DialogTitle","DialogContent","dividers","multiline","newValue","console","log","DialogActions","Button","autoFocus","onChangeRaw","isReadonly","AudioTaskEditor","audio","brief","image","onDeleteTask","subheader","select","v","onEditTask","required","TextTaskEditor","handleChangeContent","detail","i","data","remove","arr","slice","handleDeleteContent","concat","direction","ImageTaskEditor","TestTaskEditor","QuickTestTaskEditor","useStyles","makeStyles","theme","createStyles","root","flexGrow","small","width","height","menuButton","marginRight","emptyDay","KyojinEditor","classes","now","Date","rev","moment","format","editKyojin","editId","kyojins","w","undefined","uuidv4","setId","revision","setRevision","name","setName","thumbnail","setThumbnail","setImage","setTasks","days","setDays","handleDeleteTask","handleEditTask","now1","kyojin1","v1","display","displayPrint","AppBar","position","Toolbar","className","JSON","stringify","x","parse","length","kyojin","kyojinString","kyojinBlob","Blob","FileSaver","saveAs","count","newDays","Array","_","App","setKyojins","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIAKYA,E,kFAAAA,K,SAAAA,M,gMCQL,SAASC,EAAYC,GAC1B,OAAQA,GACN,IAAK,QACH,MAAO,iCACT,IAAK,OACH,MAAO,oFACT,IAAK,YACH,MAAO,sEACT,IAAK,OACH,MAAO,2BACT,IAAK,QACH,MAAO,oDAIN,SAASC,EAAmBD,GACjC,OAAQA,GACN,IAAK,OACH,MAAO,iCACT,IAAK,WACH,MAAO,sFAIN,SAASE,EAAYF,GAC1B,OAAQA,GACN,IAAK,UACH,MAAO,uCACT,IAAK,OACH,MAAO,8CCWEG,MA5Cf,SAAiBC,GAAe,IAAD,EACGC,IAAMC,SAA6B,MADtC,mBACtBC,EADsB,KACZC,EADY,KAe7B,OACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,uDAEE,cAACC,EAAA,EAAD,CACEC,KAAK,MACLC,aAAW,OACXC,QAnBe,SAACC,GACtBR,EAAYQ,EAAMC,gBAmBZC,MAAM,4EAJR,SAME,cAAC,IAAD,SAIJ,cAACC,EAAA,EAAD,CACEC,GAAG,cACHb,SAAUA,EACVc,aAAW,EACXC,KAAMC,QAAQhB,GACdiB,QAvBkB,WACtBhB,EAAY,OAiBV,SAOG,CAAC,QAAS,OAAQ,YAAa,OAAQ,SAASiB,KAAI,SAAAC,GAAC,OAAIA,KAAeD,KAAI,SAAAzB,GAAE,OAC7E,cAAC2B,EAAA,EAAD,CAAmBZ,SA9BRa,EA8B2B5B,EA9BR,WACpCI,EAAMyB,UAAUD,GAChBpB,EAAY,QA4BqCsB,SAAiB,SAAP9B,GAAwB,cAAPA,EAAtE,SAA4FD,EAAYC,IAAzFA,GA9BL,IAAC4B,W,4CCoEd,SAASG,EAAgBC,GAC9B,OAAQA,EAAKC,UACX,IAAK,QAAU,IAAD,EACNP,EAAIM,EACV,MAAM,GAAN,OAAUjC,EAAYiC,EAAKC,UAA3B,sBAAwCP,EAAER,aAA1C,QAAmDQ,EAAEN,GAArD,aAA4DM,EAAEQ,KAA9D,KAEF,IAAK,QAAU,IAAD,EACNR,EAAIM,EACV,MAAM,GAAN,OAAUjC,EAAYiC,EAAKC,UAA3B,sBAAwCP,EAAER,aAA1C,QAAmDQ,EAAEN,IAEvD,IAAK,YAAc,IAAD,EACVM,EAAIM,EACV,MAAM,GAAN,OAAUjC,EAAYiC,EAAKC,UAA3B,sBAAwCP,EAAER,aAA1C,QAAmDQ,EAAEN,IAEvD,IAAK,OAAS,IAAD,EACLM,EAAIM,EACV,MAAM,GAAN,OAAUjC,EAAYiC,EAAKC,UAA3B,sBAAwCP,EAAER,aAA1C,QAAmDQ,EAAEN,IAEvD,IAAK,OAAS,IAAD,EACLM,EAAIM,EACV,MAAM,GAAN,OAAUjC,EAAYiC,EAAKC,UAA3B,sBAAwCP,EAAER,aAA1C,QAAmDQ,EAAEN,GAArD,aAA4DlB,EAAYwB,EAAEQ,MAA1E,MC3BSC,MA7Df,SAAiB/B,GAAe,IAAD,EACGC,IAAMC,SAA6B,MADtC,mBACtBC,EADsB,KACZC,EADY,KAkB7B,OACE,eAAC4B,EAAA,EAAD,CAAMzB,QAAQ,WAAd,UACE,cAAC0B,EAAA,EAAD,CACEC,OACE,cAAC1B,EAAA,EAAD,CAAYE,aAAW,SAASC,QAnBjB,SAACC,GACtBR,EAAYQ,EAAMC,gBAkBZ,SACE,cAAC,IAAD,MAGJC,MAAK,mCAAUd,EAAMmC,UAAY,KAGnC,cAACC,EAAA,EAAD,UACGpC,EAAMqC,SAASC,MAAMjB,KAAI,SAAAC,GAExB,IArBciB,EAqBRC,EAAQxC,EAAMyC,SAASC,MAAK,SAAA9C,GAAE,OAAIA,EAAGoB,KAAOM,KAC5CqB,EAASH,EAAQb,EAAgBa,GAA1B,eAA2ClB,GACxD,OACA,cAACsB,EAAA,EAAD,CAEErC,QAAQ,WACRsC,KAAK,QACLC,UA5BYP,EA4BWjB,EA5BU,WACzCtB,EAAM+C,aAAa/C,EAAMmC,UAAWI,KA4B5BS,MAAOL,GALT,eACerB,SAUnB,cAACP,EAAA,EAAD,CACEC,GAAG,cACHb,SAAUA,EACVc,aAAW,EACXC,KAAMC,QAAQhB,GACdiB,QArCkB,WACtBhB,EAAY,OA+BV,SAOGJ,EAAMyC,SAASQ,QAAO,SAAArD,GAAE,OAAKI,EAAMqC,SAASC,MAAMY,SAAStD,EAAGoB,OAAKK,KAAI,SAAAzB,GAAE,OACxE,cAAC2B,EAAA,EAAD,CAAsBZ,SA/CX4B,EA+C8B3C,EAAGoB,GA/CZ,WACtChB,EAAMyB,UAAUzB,EAAMmC,UAAWI,GACjCnC,EAAY,QA6CN,SAAkDuB,EAAgB/B,IAAnDA,EAAGoB,IA/CR,IAACuB,WCwCNY,MA9Cf,SAAiBnD,GAMf,OACE,eAACoD,EAAA,EAAD,CACE7C,QAAQ,YACR8C,UAAW,EAFb,UAIE,cAACC,EAAA,EAAD,CACEtC,GAAG,kBACHgC,MAAM,8HACNO,WAAW,UACXzB,KAAK,SAEL0B,MAAOxD,EAAMyD,UACbC,SAhBkB,SAAC9C,GACvBZ,EAAM2D,YAAYC,OAAOhD,EAAMiD,OAAOL,SAgBlCM,WAAY,CACVC,IAAK,EACLC,IAAK,IAEPC,gBAAiB,CACfC,QAAQ,KAIZ,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,UAAvC,SACGtE,EAAMuE,UAAUlD,KAAI,SAACmD,EAAGC,GAAJ,OACnB,cAACN,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,EAAD,CACExC,UAAWsC,EACXpC,SAAUmC,EACV/B,SAAUzC,EAAMyC,SAChBhB,UAAWzB,EAAM4E,aACjB7B,aAAc/C,EAAM6E,mBANxB,aAAqCJ,a,8DCoChCK,MAzEf,SAAa9E,GAAe,IAAD,EACDC,IAAMC,UAAS,GADd,mBAClBgB,EADkB,KACZ6D,EADY,OAEO9E,IAAMC,SAAS,IAFtB,mBAElB8E,EAFkB,KAERC,EAFQ,KA4BzB,OACE,gCACE,cAACC,EAAA,EAAD,CAASpE,MAAM,4CAAf,SACE,cAACN,EAAA,EAAD,CACEE,aAAW,MACXyE,gBAAc,OACdC,MAAM,UACNzE,QAxBmB,WACzBoE,GAAQ,GACRE,EAAYjF,EAAMqF,MAkBd,SAME,cAAC,IAAD,QAGJ,eAACC,EAAA,EAAD,CACEC,sBAAoB,EACpBC,sBAAoB,EACpBC,SAAS,KACTC,WAAS,EACTC,kBAAgB,4BAChBzE,KAAMA,EANR,UAQE,cAAC0E,EAAA,EAAD,CAAa5E,GAAG,4BAAhB,iBACA,cAAC6E,EAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,cAACxC,EAAA,EAAD,CACEtC,GAAG,kBACHgC,MAAM,QACNH,KAAK,QACL6C,WAAS,EACTK,WAAS,EACTvC,MAAOwB,EACPtB,SArDmB,SAAC9C,GAC5B,IAAMoF,EACJpF,EAAMiD,OAAOL,OAAgC,KAAvB5C,EAAMiD,OAAOL,MAAe5C,EAAMiD,OAAOL,MAAQ,GACzEyC,QAAQC,IAAI,gBAAkBF,GAC9Bf,EAAYe,IAkDJzF,QAAQ,eAGZ,eAAC4F,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,WAAS,EAAC1F,QA9CF,WACtBoE,GAAQ,GACRE,EAAY,KA4CsCG,MAAM,UAAlD,oBACA,cAACgB,EAAA,EAAD,CACEzF,QA3CW,WACnBoE,GAAQ,GAER/E,EAAMsG,YAAYtB,GAClBC,EAAY,KAwCJG,MAAM,UACN1D,SAAU1B,EAAMuG,WAHlB,2B,0BCyGKC,OAnKf,SAAyBxG,GAAe,IAAD,UAE/B8B,EAAI,UAAG9B,EAAM4B,YAAT,aAAG,EAAYE,KACnB2E,EAAK,UAAGzG,EAAM4B,YAAT,aAAG,EAAY6E,MAEpB3F,EAAK,UAAGd,EAAM4B,YAAT,aAAG,EAAYd,MACpB4F,EAAK,UAAG1G,EAAM4B,YAAT,aAAG,EAAY8E,MACpBC,EAAK,UAAG3G,EAAM4B,YAAT,aAAG,EAAY+E,MA+D1B,OACE,eAAC3E,EAAA,EAAD,CAAMzB,QAAQ,WAAd,UACE,cAAC0B,EAAA,EAAD,CACEC,OACE,cAAC1B,EAAA,EAAD,CAAYE,aAAW,SAASC,QAXnB,WACnBsF,QAAQC,IAAI,gBAAkBlG,EAAMgB,IAChChB,EAAM4G,cACR5G,EAAM4G,aAAa5G,EAAMgB,KAQrB,SACE,cAAC,KAAD,MAGJF,MAAOnB,EAAYK,EAAM6B,UACzBgF,UACE,mCACE,cAACvG,EAAA,EAAD,CAAY8E,MAAM,gBAAlB,SAAmCpF,EAAMgB,SAK/C,cAACoB,EAAA,EAAD,UACE,eAAC+B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,UAAvC,UACE,cAACH,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,eAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAM,qBACN8D,QAAM,EACNtD,MAAK,OAAE1B,QAAF,IAAEA,IAAQ,GACf4B,SAnFa,SAAC9C,GACxB,IAAMmG,EAAInG,EAAMiD,OAAOL,MACvB,GAAIxD,EAAMgH,WAAY,CACpB,IAAM1F,EAAC,2BACFtB,EAAM4B,MADJ,IAELE,KAAMiF,IAER/G,EAAMgH,WAAW1F,KA6EToE,WAAS,EACTuB,UAAQ,EACR1G,QAAQ,WATV,UAWE,cAACgB,EAAA,EAAD,CAAwBiC,MAAM,IAAhB,WACd,cAACjC,EAAA,EAAD,CAA2BiC,MAAM,aAAjC,mEAAc,cACd,cAACjC,EAAA,EAAD,CAAwBiC,MAAM,UAA9B,uDAAc,WACd,cAACjC,EAAA,EAAD,CAAsBiC,MAAM,QAA5B,+BAAc,SACd,cAACjC,EAAA,EAAD,CAA2BiC,MAAM,aAAjC,4FAAc,mBAGlB,cAACW,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAM,+BACNO,WAAW,kKACXC,MAAK,OAAEiD,QAAF,IAAEA,IAAS,GAChB/C,SA5Fc,SAAC9C,GACzB,IAAMmG,EAAInG,EAAMiD,OAAOL,MACvB,GAAIxD,EAAMgH,WAAY,CACpB,IAAM1F,EAAC,2BACFtB,EAAM4B,MADJ,IAEL6E,MAAOM,IAET/G,EAAMgH,WAAW1F,KAsFToE,WAAS,EACTuB,UAAQ,EACR1G,QAAQ,eAGZ,cAAC4D,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAM,yDACNO,WAAW,oLACXC,MAAK,OAAE1C,QAAF,IAAEA,IAAS,GAChB4C,SA/Fc,SAAC9C,GACzB,IAAMmG,EAAInG,EAAMiD,OAAOL,MACvB,GAAIxD,EAAMgH,WAAY,CACpB,IAAM1F,EAAC,2BACFtB,EAAM4B,MADJ,IAELd,MAAOiG,IAET/G,EAAMgH,WAAW1F,KAyFToE,WAAS,EACTnF,QAAQ,eAGZ,cAAC4D,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAM,0GACNO,WAAW,oLACXC,MAAK,OAAEkD,QAAF,IAAEA,IAAS,GAChBhD,SAjGc,SAAC9C,GACzB,IAAMmG,EAAInG,EAAMiD,OAAOL,MACvB,GAAIxD,EAAMgH,WAAY,CACpB,IAAM1F,EAAC,2BACFtB,EAAM4B,MADJ,IAEL8E,MAAOK,IAET/G,EAAMgH,WAAW1F,KA2FToE,WAAS,EACTnF,QAAQ,eAGZ,cAAC4D,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAM,4GACNO,WAAW,oLACXC,MAAK,OAAEmD,QAAF,IAAEA,IAAS,GAChBjD,SAnGc,SAAC9C,GACzB,IAAMmG,EAAInG,EAAMiD,OAAOL,MACvB,GAAIxD,EAAMgH,WAAY,CACpB,IAAM1F,EAAC,2BACFtB,EAAM4B,MADJ,IAEL+E,MAAOI,IAET/G,EAAMgH,WAAW1F,KA6FToE,WAAS,EACTnF,QAAQ,wBCmGP2G,OA1Pf,SAAwBlH,GAAe,IAAD,UAE9B8B,EAAI,UAAG9B,EAAM4B,YAAT,aAAG,EAAYE,KACnBhB,EAAK,UAAGd,EAAM4B,YAAT,aAAG,EAAYd,MACpB4F,EAAK,UAAG1G,EAAM4B,YAAT,aAAG,EAAY8E,MACpBC,EAAK,UAAG3G,EAAM4B,YAAT,aAAG,EAAY+E,MALU,EASJ1G,IAAMC,SAA6B,MAT/B,mBAS7BC,EAT6B,KASnBC,EATmB,KA8E9B+G,EAAsB,SAAC1C,GAAD,OAAmB,SAAC7D,GAC9C,IAAMmG,EAAInG,EAAMiD,OAAOL,MACvB,GAAIxD,EAAMgH,WAAY,CAAC,IAAD,EACd1F,EAAC,2BACFtB,EAAM4B,MADJ,IAELwF,QAAQ,UAACpH,EAAM4B,KAAKwF,cAAZ,QAAsB,IAAI/F,KAAI,SAACmD,EAAG6C,GACxC,OAAOA,IAAM5C,EAAQ,CAAE3C,KAAM0C,EAAE1C,KAAMwF,KAAMP,GAAMvC,OAGrDxE,EAAMgH,WAAW1F,MAafiG,EAAS,SAACC,EAAU/C,GAAX,4BAEV+C,EAAIC,MAAM,EAAGhD,IAFH,YAKV+C,EAAIC,MAAMhD,EAAQ,MAGjBiD,EAAsB,SAACjD,GAAD,OAAmB,WAC7C,GAAIzE,EAAMgH,WAAY,CAAC,IAAD,EACd1F,EAAC,2BACFtB,EAAM4B,MADJ,IAELwF,OAAQG,EAAM,UAACvH,EAAM4B,KAAKwF,cAAZ,QAAsB,GAAI3C,KAE1CzE,EAAMgH,WAAW1F,MAIrB,OACE,eAACU,EAAA,EAAD,CAAMzB,QAAQ,WAAd,UACE,cAAC0B,EAAA,EAAD,CACEC,OACE,cAAC1B,EAAA,EAAD,CAAYE,aAAW,SAASC,QAnDnB,WACnBsF,QAAQC,IAAI,gBAAkBlG,EAAMgB,IAChChB,EAAM4G,cACR5G,EAAM4G,aAAa5G,EAAMgB,KAgDrB,SACE,cAAC,KAAD,MAGJF,MAAOnB,EAAYK,EAAM6B,UACzBgF,UACE,mCACE,cAACvG,EAAA,EAAD,CAAY8E,MAAM,gBAAlB,SAAmCpF,EAAMgB,SAK/C,cAACoB,EAAA,EAAD,UACE,eAAC+B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,UAAvC,UACE,cAACH,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,eAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAM,qBACN8D,QAAM,EACNtD,MAAK,OAAE1B,QAAF,IAAEA,IAAQ,GACf4B,SAlHa,SAAC9C,GACxB,IAAMmG,EAAInG,EAAMiD,OAAOL,MACvB,GAAIxD,EAAMgH,WAAY,CACpB,IAAM1F,EAAC,2BACFtB,EAAM4B,MADJ,IAELE,KAAMiF,IAER/G,EAAMgH,WAAW1F,KA4GToE,WAAS,EACTuB,UAAQ,EACR1G,QAAQ,WATV,UAWE,cAACgB,EAAA,EAAD,CAAwBiC,MAAM,IAAhB,WACd,cAACjC,EAAA,EAAD,CAAwBiC,MAAM,UAA9B,SAAyC1D,EAAY,YAAvC,WACd,cAACyB,EAAA,EAAD,CAAqBiC,MAAM,OAA3B,SAAmC1D,EAAY,SAAjC,aAGlB,cAACqE,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAM,yDACNQ,MAAK,OAAE1C,QAAF,IAAEA,IAAS,GAChB4C,SAxHc,SAAC9C,GACzB,IAAMmG,EAAInG,EAAMiD,OAAOL,MACvB,GAAIxD,EAAMgH,WAAY,CACpB,IAAM1F,EAAC,2BACFtB,EAAM4B,MADJ,IAELd,MAAOiG,IAET/G,EAAMgH,WAAW1F,KAkHToE,WAAS,EACTuB,UAAQ,EACR1G,QAAQ,eAGZ,cAAC4D,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAM,0GACN+C,WAAW,EACXvC,MAAK,OAAEkD,QAAF,IAAEA,IAAS,GAChBhD,SA3Hc,SAAC9C,GACzB,IAAMmG,EAAInG,EAAMiD,OAAOL,MACvB,GAAIxD,EAAMgH,WAAY,CACpB,IAAM1F,EAAC,2BACFtB,EAAM4B,MADJ,IAEL8E,MAAOK,IAET/G,EAAMgH,WAAW1F,KAqHToE,WAAS,EACTuB,UAAQ,EACR1G,QAAQ,eAGZ,cAAC4D,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAM,4GACNO,WAAW,kKACXC,MAAK,OAAEmD,QAAF,IAAEA,IAAS,GAChBjD,SA9Hc,SAAC9C,GACzB,IAAMmG,EAAInG,EAAMiD,OAAOL,MACvB,GAAIxD,EAAMgH,WAAY,CACpB,IAAM1F,EAAC,2BACFtB,EAAM4B,MADJ,IAEL+E,MAAOI,IAET/G,EAAMgH,WAAW1F,KAwHToE,WAAS,EACTuB,UAAQ,EACR1G,QAAQ,eAGZ,eAAC4D,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,UACE,eAACpE,EAAA,EAAD,6HAEE,cAACE,EAAA,EAAD,CACEC,KAAK,MACLC,aAAW,OACXC,QA1LS,SAACC,GACtBR,EAAYQ,EAAMC,gBA0LNC,MAAM,iJAJR,SAME,cAAC,IAAD,SAGJ,cAACC,EAAA,EAAD,CACEC,GAAG,cACHb,SAAUA,EACVc,aAAW,EACXC,KAAMC,QAAQhB,GACdiB,QAvLY,WACtBhB,EAAY,OAiLJ,SAOG,CAAC,OAAQ,YAAYiB,KAAI,SAAAC,GAAC,OAAIA,KAAsBD,KAAI,SAAAzB,GAAE,OACzD,cAAC2B,EAAA,EAAD,CAAmBZ,SApMPa,EAoMiC5B,EApMP,WAClD,GAAII,EAAMgH,WAAY,CAAC,IAAD,EACd1F,EAAC,2BACFtB,EAAM4B,MADJ,IAELwF,QAAQ,UAACpH,EAAM4B,KAAKwF,cAAZ,QAAsB,IAAIO,OAAO,CAAE7F,KAAMN,EAAM8F,KAAM,OAE/DtH,EAAMgH,WAAW1F,GAEnBlB,EAAY,QA4LA,SAAmDP,EAAmBD,IAAvDA,GApMJ,IAAC4B,UAwMlB,cAAC2C,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACP,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,mBACGrE,EAAM4B,KAAKwF,cADd,aACG,EAAmB/F,KAAI,SAACmD,EAAGC,GAAJ,aACtB,cAACN,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,eAACP,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGuD,UAAU,MAAtC,UACE,cAACzD,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAK,UAAKyB,EAAL,YAAc5E,EAAmB2E,EAAE1C,OACxCiE,UAAsB,SAAXvB,EAAE1C,KACb0B,MAAK,UAAEgB,EAAE8C,YAAJ,QAAY,GACjB5D,SAAUyD,EAAoB1C,GAC9BiB,WAAS,EACTuB,UAAQ,EACR1G,QAAQ,eAGZ,cAAC4D,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,EAAf,SACE,cAAClE,EAAA,EAAD,CAAYE,aAAW,SAASC,QAAS+G,EAAoBjD,GAA7D,SACE,cAAC,KAAD,6BCpIToD,OAzGf,SAAyB7H,GAAe,IAAD,MAE/Bc,EAAK,UAAGd,EAAM4B,YAAT,aAAG,EAAYd,MACpB4F,EAAK,UAAG1G,EAAM4B,YAAT,aAAG,EAAY8E,MACpBC,EAAK,UAAG3G,EAAM4B,YAAT,aAAG,EAAY+E,MAyC1B,OACE,eAAC3E,EAAA,EAAD,CAAMzB,QAAQ,WAAd,UACE,cAAC0B,EAAA,EAAD,CACEC,OACE,cAAC1B,EAAA,EAAD,CAAYE,aAAW,SAASC,QAXnB,WACnBsF,QAAQC,IAAI,gBAAkBlG,EAAMgB,IAChChB,EAAM4G,cACR5G,EAAM4G,aAAa5G,EAAMgB,KAQrB,SACE,cAAC,KAAD,MAGJF,MAAOnB,EAAYK,EAAM6B,UACzBgF,UACE,mCACE,cAACvG,EAAA,EAAD,CAAY8E,MAAM,gBAAlB,SAAmCpF,EAAMgB,SAK/C,cAACoB,EAAA,EAAD,UACE,eAAC+B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,UAAvC,UACE,cAACH,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAM,yDACNQ,MAAK,OAAE1C,QAAF,IAAEA,IAAS,GAChB4C,SA/Dc,SAAC9C,GACzB,IAAMmG,EAAInG,EAAMiD,OAAOL,MACvB,GAAIxD,EAAMgH,WAAY,CACpB,IAAM1F,EAAC,2BACFtB,EAAM4B,MADJ,IAELd,MAAOiG,IAET/G,EAAMgH,WAAW1F,KAyDToE,WAAS,EACTnF,QAAQ,eAGZ,cAAC4D,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAM,0GACNQ,MAAK,OAAEkD,QAAF,IAAEA,IAAS,GAChBhD,SAhEc,SAAC9C,GACzB,IAAMmG,EAAInG,EAAMiD,OAAOL,MACvB,GAAIxD,EAAMgH,WAAY,CACpB,IAAM1F,EAAC,2BACFtB,EAAM4B,MADJ,IAEL8E,MAAOK,IAET/G,EAAMgH,WAAW1F,KA0DToE,WAAS,EACTnF,QAAQ,eAGZ,cAAC4D,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAM,4GACNO,WAAW,kKACXC,MAAK,OAAEmD,QAAF,IAAEA,IAAS,GAChBjD,SAlEc,SAAC9C,GACzB,IAAMmG,EAAInG,EAAMiD,OAAOL,MACvB,GAAIxD,EAAMgH,WAAY,CACpB,IAAM1F,EAAC,2BACFtB,EAAM4B,MADJ,IAEL+E,MAAOI,IAET/G,EAAMgH,WAAW1F,KA4DToE,WAAS,EACTuB,UAAQ,EACR1G,QAAQ,wBC9DPuH,OAjCf,SAAwB9H,GAStB,OACE,eAACgC,EAAA,EAAD,CAAMzB,QAAQ,WAAd,UACE,cAAC0B,EAAA,EAAD,CACEC,OACE,cAAC1B,EAAA,EAAD,CAAYE,aAAW,SAASC,QAXnB,WACnBsF,QAAQC,IAAI,gBAAkBlG,EAAMgB,IAChChB,EAAM4G,cACR5G,EAAM4G,aAAa5G,EAAMgB,KAQrB,SACE,cAAC,KAAD,MAGJF,MAAOnB,EAAYK,EAAM6B,UACzBgF,UACE,mCACE,cAACvG,EAAA,EAAD,CAAY8E,MAAM,gBAAlB,SAAmCpF,EAAMgB,SAK/C,cAACoB,EAAA,EAAD,UACE,cAAC9B,EAAA,EAAD,2ECOOyH,OAjCf,SAA6B/H,GAS3B,OACE,eAACgC,EAAA,EAAD,CAAMzB,QAAQ,WAAd,UACE,cAAC0B,EAAA,EAAD,CACEC,OACE,cAAC1B,EAAA,EAAD,CAAYE,aAAW,SAASC,QAXnB,WACnBsF,QAAQC,IAAI,gBAAkBlG,EAAMgB,IAChChB,EAAM4G,cACR5G,EAAM4G,aAAa5G,EAAMgB,KAQrB,SACE,cAAC,KAAD,MAGJF,MAAOnB,EAAYK,EAAM6B,UACzBgF,UACE,mCACE,cAACvG,EAAA,EAAD,CAAY8E,MAAM,gBAAlB,SAAmCpF,EAAMgB,SAK/C,cAACoB,EAAA,EAAD,UACE,cAAC9B,EAAA,EAAD,2ECtBF0H,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CAOXC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,MAAOL,EAAM7D,QAAQ,GACrBmE,OAAQN,EAAM7D,QAAQ,IAExBoE,WAAY,CACVC,YAAaR,EAAM7D,QAAQ,IAE7BvD,MAAO,CACLuH,SAAU,QAWVM,GAAqB,CACzBrG,MAAO,IAwTMsG,OAtTf,SAAsB5I,GAAe,IAAD,QAC5B6I,EAAUb,KACVc,EAAM,IAAIC,KACVC,EAAMC,IAAOH,GAAKI,OAAO,mBAEzBC,EAAenJ,EAAMoJ,OAASpJ,EAAMqJ,QAAQ3G,MAAK,SAAA4G,GAAC,OAAIA,EAAEtI,KAAOhB,EAAMoJ,eAAUG,EALnD,EAOdtJ,IAAMC,SAAN,iBAAuBiJ,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAYnI,UAAnC,QAAyCwI,eAP3B,mBAO3BxI,EAP2B,KAOvByI,EAPuB,OAQFxJ,IAAMC,SAAN,iBAAuBiJ,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAYO,gBAAnC,QAA+CV,GAR7C,mBAQ3BU,EAR2B,KAQjBC,EARiB,OASV1J,IAAMC,SAAN,OAAmCiJ,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAYS,MATrC,mBAS3BA,EAT2B,KASrBC,EATqB,OAUA5J,IAAMC,SAAN,OAAsCiJ,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAYW,WAVlD,mBAU3BA,EAV2B,KAUhBC,EAVgB,OAWR9J,IAAMC,SAAN,OAAsCiJ,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAYxC,OAX1C,mBAW3BA,EAX2B,KAWpBqD,EAXoB,OAYR/J,IAAMC,SAAN,iBAAuBiJ,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAY7G,aAAnC,QAA4C,IAZpC,mBAY3BA,EAZ2B,KAYpB2H,EAZoB,OAaVhK,IAAMC,SAAN,iBAA2BiJ,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAYe,YAAvC,QAA+C,CAACvB,KAbtC,oBAa3BuB,GAb2B,MAarBC,GAbqB,MAqC5BC,GAAmB,SAACpJ,GACxBiJ,EAAS3H,EAAMW,QAAO,SAAA3B,GAAC,OAAIA,EAAEN,KAAOA,MACpC2I,EAAYV,IAAO,IAAIF,MAAQG,OAAO,qBAGlCmB,GAAiB,SAACzI,GACtBqI,EAAS3H,EAAMjB,KAAI,SAAAC,GAAC,OAAIA,EAAEN,KAAOY,EAAKZ,GAAKM,EAAIM,MAC/C+H,EAAYV,IAAO,IAAIF,MAAQG,OAAO,qBAkFlCoB,GAAO,IAAIvB,KAEXwB,IADOtB,IAAOqB,IAAMpB,OAAO,mBACT,CACtBnC,EAAGrH,EAAkB8K,GACrBxJ,GAAIA,EACJ0I,SAAUV,EACVY,KAAI,OAAEA,QAAF,IAAEA,IAAQ,GACdE,UAAS,OAAEA,QAAF,IAAEA,IAAa,GACxBnD,MAAK,OAAEA,QAAF,IAAEA,IAAS,GAChBrE,MAAOA,EACP4H,KAAMA,KAGR,OACE,gCACE,cAAC7J,EAAA,EAAD,CAAKoK,QAAQ,QAAQC,aAAa,OAAlC,SACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,CAAStK,QAAQ,QAAjB,UACE,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAAoBuK,UAAWjC,EAAQ/H,MAA3D,oHAA6B,YAG7B,cAAC,EAAD,CACEyF,YAAY,EACZlB,IAAK0F,KAAKC,UAAUT,QAAShB,EAAW,GACxCjD,YAxCM,SAACjB,GACjB,IAAM4F,EAAYF,KAAKG,MAAM7F,GACxB4F,IAKLxB,EAAMwB,EAAEjK,IACR2I,EAAYsB,EAAEvB,UACdG,EAAQoB,EAAErB,MACVG,EAAakB,EAAEnB,WACfE,EAASiB,EAAEtE,OACXsD,EAASgB,EAAE3I,OACX6H,GAAQc,EAAEf,UA6BF,cAAChF,EAAA,EAAD,CAASpE,MAAM,6CAAf,SACE,cAACN,EAAA,EAAD,CACEC,KAAK,MACL2E,MAAM,UACN1E,aAAW,6CACXC,QAlFc,WAC1B,GAAKiJ,EAIL,GAAKE,EAIL,GAAKnD,EAIL,GAAKrE,GAA0B,IAAjBA,EAAM6I,OAApB,CAIA,IAAMC,EAAiB,CACrBrE,EAAGrH,EAAkB8K,GACrBxJ,GAAIA,EACJ0I,SAAUV,EACVY,KAAMA,EACNE,UAAWA,EACXnD,MAAOA,EACPrE,MAAOA,EACP4H,KAAMA,IAEFmB,EAAeN,KAAKC,UAAUI,OAAQ7B,EAAW,GAEnD+B,EAAa,IAAIC,KAAK,CAACF,GAAe,CACxCvJ,KAAM,mCAER0J,IAAUC,OAAOH,EAAYF,EAAOxB,KAAO,IAAMwB,EAAO1B,SAAW,cAlBjEzD,QAAQC,IAAI,iBAJZD,QAAQC,IAAI,iBAJZD,QAAQC,IAAI,qBAJZD,QAAQC,IAAI,YA4EJ,SAME,cAAC,IAAD,eAMV,eAAC7F,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBACA,eAAC6D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,UAAvC,UACE,cAACH,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,OACH6B,KAAK,QACLG,MAAM,kFACNQ,MAAK,OAAEoG,QAAF,IAAEA,IAAQ,GACflG,SA7Ja,SAAC9C,GACxBiJ,EAAQjJ,EAAMiD,OAAOL,OACrBmG,EAAYV,IAAO,IAAIF,MAAQG,OAAO,qBA4J5BxD,WAAS,EACTuB,UAAQ,EACR1G,QAAQ,cATW,QAYvB,cAAC4D,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,WACH6B,KAAK,QACLG,MAAM,uCACNQ,MAAK,OAAEkG,QAAF,IAAEA,IAAY,GACnBhE,WAAS,EACTnF,QAAQ,WACRmB,UAAQ,KARW,WAWvB,cAACyC,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,YACH6B,KAAK,QACLG,MAAM,2GACNQ,MAAK,OAAEsG,QAAF,IAAEA,IAAa,GACpBpG,SAhLkB,SAAC9C,GAC7BmJ,EAAanJ,EAAMiD,OAAOL,OAC1BmG,EAAYV,IAAO,IAAIF,MAAQG,OAAO,qBA+K5BxD,WAAS,EACTuB,UAAQ,EACR1G,QAAQ,cATW,aAYvB,cAAC4D,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACpB,EAAA,EAAD,CACEtC,GAAG,QACH6B,KAAK,QACLG,MAAM,4GACNQ,MAAK,OAAEmD,QAAF,IAAEA,IAAS,GAChBjD,SAxLc,SAAC9C,GACzBoJ,EAASpJ,EAAMiD,OAAOL,OACtBmG,EAAYV,IAAO,IAAIF,MAAQG,OAAO,qBAuL5BxD,WAAS,EACTuB,UAAQ,EACR1G,QAAQ,cATW,SAYvB,cAAC4D,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAAC,EAAD,CACEjB,UAAWyG,GAAKiB,OAChB5G,UAAW2F,GACXzH,SAAUH,EACVqB,YA7KY,SAAC+H,GACvB,GAAGA,EAAQxB,GAAKiB,OAAQ,CAEtB,IAAMQ,EAAUzB,GAAKvC,OAAO,YAAIiE,MAAMF,EAAQxB,GAAKiB,SAAS9J,KAAI,SAACwK,EAAGxE,GAAJ,MAAW,CACzE/E,MAAO,QAET6H,GAAQwB,QAGRxB,GAAQD,GAAKzC,MAAM,EAAGiE,KAqKd9G,aAjKa,SAACzC,EAAmBI,GAC3C4H,GAAQD,GAAK7I,KAAI,SAACmD,EAAGC,GAAJ,OAAgBA,IAAUtC,EACrC,CAAEG,MAAOkC,EAAElC,MAAMW,QAAO,SAAA3B,GAAC,OAAIA,IAAMiB,KAAQoF,OAAO,CAACpF,KACnDiC,OA+JIK,gBA3JgB,SAAC1C,EAAmBI,GAC9C4H,GAAQD,GAAK7I,KAAI,SAACmD,EAAGC,GAAJ,OAAgBA,IAAUtC,EACvC,CAAEG,MAAOkC,EAAElC,MAAMW,QAAO,SAAA3B,GAAC,OAAIA,IAAMiB,MACnCiC,UAiJyB,WAUvB,cAACL,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAAC,EAAD,CACEjD,UAtMU,SAACI,GACrB,IAAID,EAAa,CACfZ,GAAIwI,cACJ3H,SAAUA,GAEZoI,EAAS3H,EAAMqF,OAAO,CAAC/F,KACvB+H,EAAYV,IAAO,IAAIF,MAAQG,OAAO,wBA8LT,WAKvB,cAAC/E,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAf,SACE,cAACP,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,UAAvC,SACGhC,EAAMjB,KAAI,SAAAC,GACT,OAAQA,EAAEO,UACR,IAAK,QACH,OACE,cAACsC,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3D,GAAIM,EAAEN,GACNa,SAAUP,EAAEO,SACZD,KAAMN,EACN0F,WAAYqD,GACZzD,aAAcwD,MANa9I,EAAEN,IAWrC,IAAK,OACH,OACE,cAACmD,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3D,GAAIM,EAAEN,GACNa,SAAUP,EAAEO,SACZD,KAAMN,EACN0F,WAAYqD,GACZzD,aAAcwD,MANa9I,EAAEN,IAUrC,IAAK,QACH,OACE,cAACmD,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3D,GAAIM,EAAEN,GACNa,SAAUP,EAAEO,SACZD,KAAMN,EACN0F,WAAYqD,GACZzD,aAAcwD,MANa9I,EAAEN,IAUrC,IAAK,YACH,OACE,cAACmD,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3D,GAAIM,EAAEN,GACNa,SAAUP,EAAEO,SACZD,KAAMN,EACNsF,aAAcwD,MALa9I,EAAEN,IASrC,IAAK,OACH,OACE,cAACmD,EAAA,EAAD,CAAM3C,MAAI,EAACkD,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3D,GAAIM,EAAEN,GACNa,SAAUP,EAAEO,SACZD,KAAMN,EACNsF,aAAcwD,MALa9I,EAAEN,IASrC,QACE,OACE,eAACV,EAAA,EAAD,WAAagB,EAAEN,GAAf,MAAsBM,EAAEO,mBAjEb,mBClQlBiK,OAnBf,WAAgB,IAAD,EAEiB7L,IAAMC,SAAmB,IAF1C,mBAENmJ,EAFM,KAEG0C,EAFH,KAQb,OACE,qBAAKjB,UAAU,MAAf,SACE,cAAC,GAAD,CAEEzB,QAASA,EACT3F,SATqB,SAACF,GAC1BuI,EAAW,CAACvI,UCIDwI,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7738dc54.chunk.js","sourcesContent":["// Тут будут описания сущностей в нашей модели данных\n\nimport { Task } from \"./tasks\";\nimport { IdString, UrlString } from \"./types\";\n\nexport enum KyojinTypeVersion {\n  v1 = 'v1'\n}\n\nexport type DayTasks = {\n  tasks: IdString[];\n};\n\nexport type Kyojin = {\n  v: KyojinTypeVersion;\n  id: IdString;\n  revision: string;\n  name: string;\n  thumbnail: UrlString;\n  image: UrlString;\n  tasks: Task[];\n  days: DayTasks[];\n};","// Тут будут описания базовых типов в нашей модели данных\n\nexport type UrlString = string;\nexport type IdString = string;\nexport type TaskType = \"audio\" | \"text\" | \"quicktest\" | \"test\" | \"image\";\nexport type AudioType = \"meditation\" | \"breathe\" | \"sleep\" | \"background\";\nexport type TextType = \"article\" | \"tale\";\nexport type TextContentType = \"text\" | \"imageurl\";\nexport type TextContent = {\n  type: TextContentType;\n  data: string | UrlString;\n}\n\nexport function tr_TaskType(tt: TaskType) {\n  switch (tt) {\n    case \"audio\":\n      return \"Аудио\";\n    case \"text\":\n      return \"Статья / История\";\n    case \"quicktest\":\n      return \"Быстрый тест\";\n    case \"test\":\n      return \"Тест\";\n    case \"image\":\n      return \"Картинка\";\n  }\n}\n\nexport function tr_TextContentType(tt: TextContentType) {\n  switch (tt) {    \n    case \"text\":\n      return \"Текст\";    \n    case \"imageurl\":\n      return \"Картинка (cсылка)\";\n  }\n}\n\nexport function tr_TextType(tt: TextType) {\n  switch (tt) {    \n    case \"article\":\n      return \"Статья\";    \n    case \"tale\":\n      return \"История\";\n  }\n}\n","import React from 'react';\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport { Box, Typography, IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport { TaskType, tr_TaskType } from \"../kyojin/types\";\n\ntype Props = {  \n  onAddTask: (item: TaskType) => void;  \n};\n\nfunction TaskAdd(props: Props) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleAdd = (item: TaskType) => () => {\n    props.onAddTask(item);\n    setAnchorEl(null);\n  };\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h6\">\n      Задания\n        <IconButton\n          edge=\"end\"\n          aria-label=\"task\"\n          onClick={handleOpenMenu}\n          title=\"Новое задание\"\n        >\n          <AddCircleOutlineOutlinedIcon />\n        </IconButton>\n      </Typography>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n      >\n        {[\"audio\", \"text\", \"quicktest\", \"test\", \"image\"].map(t => t as TaskType).map(tt => (\n          <MenuItem key={tt} onClick={handleAdd(tt)} disabled={tt === \"text\" || tt === \"quicktest\"} >{tr_TaskType(tt)}</MenuItem>\n        ))}        \n      </Menu>\n    </Box>\n  );\n}\n\nexport default TaskAdd;\n","//Задания\n\nimport { IdString, TaskType, AudioType, UrlString, TextType, TextContent, tr_TaskType, tr_TextType } from \"./types\";\n\n//задание / базовый тип\nexport type Task = {\n  id: IdString;\n  tasktype: TaskType;\n  //title?: string;\n};\n\n//аудиомедитация\nexport type AudioTask = {\n  id: IdString;\n  tasktype: TaskType; // audio\n  type: AudioType;\n  audio: UrlString;\n\n  //содержимое можно достать из самого аудио файла\n  title?: string;\n  brief?: string;\n  image?: UrlString;\n  duration_in_sec?: number;\n};\n\n//статья (большая)\n//история\nexport type TextTask = {\n  id: IdString;\n  tasktype: TaskType; // tale - история | article - статья длинная\n  type: TextType;\n\n  title: string;\n  brief: string;\n  detail: TextContent[];  //тест в формате MD перемежается со ссылками на картинки\n\n  image: UrlString;\n  duration_in_min: number;\n};\n\n//быстрый тест на один вопрос\nexport type QuickTestTask = {\n  id: IdString;\n  tasktype: TaskType; //quicktest\n  \n  title: string;\n  brief: string;\n  question: Question;\n\n  image: UrlString;\n  duration_in_min: number;\n};\n\n//тест\nexport type TestTask = {\n  id: IdString\n  tasktype: TaskType; //test\n  title: string\n  brief: string\n  duration_in_min: number\n\n  questions: Question[];         //вопросы\n}\n\n//вопрос теста\nexport type Question = {\n  question: string;        //вопрос\n  answers: string[];       //варианты ответов\n  mode: AnswerMode\n}\n\n//режим отображения вариантов ответа\nexport type AnswerMode = \"segments\" | \"radio\" | \"tags\";\n\n//просмотр картинки\nexport type ImageTask = {\n  id: IdString\n  tasktype: TaskType; //image\n  title?: string\n  brief?: string\n\n  image: UrlString;\n}\n\nexport function taskDescription(task: Task) {\n  switch (task.tasktype) {\n    case \"audio\": {\n      const t = task as AudioTask;\n      return `${tr_TaskType(task.tasktype)} ${t.title ?? t.id} (${t.type})`;\n    }\n    case \"image\": {\n      const t = task as ImageTask;\n      return `${tr_TaskType(task.tasktype)} ${t.title ?? t.id}`;\n    }\n    case \"quicktest\": {\n      const t = task as QuickTestTask;\n      return `${tr_TaskType(task.tasktype)} ${t.title ?? t.id}`;\n    }\n    case \"test\": {\n      const t = task as TestTask;\n      return `${tr_TaskType(task.tasktype)} ${t.title ?? t.id}`;\n    }\n    case \"text\": {\n      const t = task as TextTask;\n      return `${tr_TaskType(task.tasktype)} ${t.title ?? t.id} (${tr_TextType(t.type)})`;\n    }\n  }\n}","import React from 'react';\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport { Card, CardContent, IconButton, CardHeader, MenuItem, Menu, Chip } from \"@material-ui/core\";\nimport { IdString } from \"../kyojin/types\";\nimport { Task, taskDescription } from \"../kyojin/tasks\";\nimport { DayTasks } from \"../kyojin/model\";\n\ntype Props = {\n  dayNumber: number; //zero based\n  dayTasks: DayTasks;\n  allTasks: Task[];\n\n  onAddTask: (dayNumber: number, taskId: IdString) => void;\n  onRemoveTask: (dayNumber: number, taskId: IdString) => void;\n};\n\nfunction DayCard(props: Props) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleAdd = (taskId: IdString) => () => {\n    props.onAddTask(props.dayNumber, taskId);\n    setAnchorEl(null);\n  };\n  const handleRemove = (taskId: IdString) => () => {\n    props.onRemoveTask(props.dayNumber, taskId);\n  };\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        action={\n          <IconButton aria-label=\"delete\" onClick={handleOpenMenu}>\n            <AddCircleOutlineOutlinedIcon />\n          </IconButton>\n        }\n        title={`День ${props.dayNumber + 1}`}\n      />\n\n      <CardContent>\n        {props.dayTasks.tasks.map(t => {\n          \n          const found = props.allTasks.find(tt => tt.id === t);\n          const desc = !!found ? taskDescription(found) : `Task ${t}`;\n          return (\n          <Chip\n            key={`chip-${t}`}\n            variant=\"outlined\"\n            size=\"small\"\n            onDelete={handleRemove(t)}\n            label={desc}\n          />\n          );\n        })}\n      </CardContent>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n      >\n        {props.allTasks.filter(tt => !props.dayTasks.tasks.includes(tt.id)).map(tt => (\n          <MenuItem key={tt.id} onClick={handleAdd(tt.id)}>{taskDescription(tt)}</MenuItem>\n        ))}\n      </Menu>\n    </Card>\n  );\n}\n\nexport default DayCard;\n","import React from 'react';\nimport { Paper, Grid, TextField } from \"@material-ui/core\";\nimport { Task } from \"../kyojin/tasks\";\nimport DayCard from './DayCard';\nimport { IdString } from \"../kyojin/types\";\nimport { DayTasks } from \"../kyojin/model\";\n\ntype Props = {\n  daysCount: number;\n  daysArray: DayTasks[];\n  allTasks: Task[];\n\n  onDaysCount: (count: number) => void;\n  onAddDayTask: (dayNumber: number, taskId: IdString) => void;\n  onRemoveDayTask: (dayNumber: number, taskId: IdString) => void;\n};\n\nfunction DayList(props: Props) {\n\n  const handleDaysCount = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onDaysCount(Number(event.target.value));\n  };\n\n  return (\n    <Paper\n      variant=\"elevation\"\n      elevation={0}\n    >\n      <TextField\n        id=\"standard-number\"\n        label=\"Количество дней в курсе\"\n        helperText=\"1 .. 90\"\n        type=\"number\"\n        // defaultValue={1}\n        value={props.daysCount}\n        onChange={handleDaysCount}\n        inputProps={{\n          min: 1,\n          max: 90\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n\n      <Grid container spacing={2} alignItems=\"stretch\">\n        {props.daysArray.map((d, index) => (\n          <Grid item xs={12} sm={4} key={`day${index}`}>            \n            <DayCard \n              dayNumber={index}\n              dayTasks={d}\n              allTasks={props.allTasks}\n              onAddTask={props.onAddDayTask}\n              onRemoveTask={props.onRemoveDayTask}\n            />\n          </Grid>\n        ))}        \n      </Grid>\n\n    </Paper>\n  );\n}\n\nexport default DayList;\n","import React from 'react';\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport { Tooltip, IconButton, Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from \"@material-ui/core\";\n\ntype Props = {\n  isReadonly: boolean;\n  raw: string;\n  onChangeRaw: (raw: string) => void;\n};\n\nfunction Raw(props: Props) {\n  const [open, setOpen] = React.useState(false);\n  const [rawValue, setRawValue] = React.useState(\"\");\n\n  const handleSelectRawValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value && event.target.value !== \"\" ? event.target.value : \"\";\n    console.log(\"new rawValue \" + newValue);\n    setRawValue(newValue);\n  };\n\n  const handleClickRawOpen = () => {\n    setOpen(true);\n    setRawValue(props.raw);\n  };\n\n  const handleRawCancel = () => {\n    setOpen(false);\n    setRawValue(\"\");\n  };\n\n  const handleRawSet = () => {\n    setOpen(false);\n\n    props.onChangeRaw(rawValue);\n    setRawValue(\"\");\n  };\n\n  return (\n    <div>\n      <Tooltip title=\"Show the full source. Copy/Paste enabled.\">\n        <IconButton\n          aria-label=\"raw\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          onClick={handleClickRawOpen}\n        >\n          <CodeIcon />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        maxWidth=\"xs\"\n        fullWidth\n        aria-labelledby=\"confirmation-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Raw</DialogTitle>\n        <DialogContent dividers>\n          <TextField\n            id=\"value-textfield\"\n            label=\"Value\"\n            size=\"small\"\n            fullWidth\n            multiline\n            value={rawValue}\n            onChange={handleSelectRawValue}\n            variant=\"outlined\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleRawCancel} color=\"primary\">Cancel</Button>\n          <Button\n            onClick={handleRawSet}\n            color=\"primary\"\n            disabled={props.isReadonly}>Set</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Raw;\n","import React from 'react';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Card, CardContent, IconButton, Typography, CardHeader, Grid, TextField, MenuItem } from \"@material-ui/core\";\nimport { AudioTask, Task } from \"../../kyojin/tasks\";\nimport { IdString, TaskType, AudioType, UrlString, tr_TaskType } from \"../../kyojin/types\";\n\ntype Props = {\n  id: IdString;\n  tasktype: TaskType;\n  task: Partial<AudioTask>;\n\n  onEditTask?: ((task: Task) => void) | undefined;\n  onDeleteTask?: ((id: IdString) => void) | undefined;\n};\n\nfunction AudioTaskEditor(props: Props) {\n\n  const type = props.task?.type;\n  const audio = props.task?.audio;\n\n  const title = props.task?.title;\n  const brief = props.task?.brief;\n  const image = props.task?.image;\n\n  //TODO: detail: TextContent[];  //тест в формате MD перемежается со ссылками на картинки\n  //const [duration_in_min, setDuration_in_min] = React.useState<number | undefined>(props.task?.duration_in_min);\n\n  const handleChangeType = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value as AudioType;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        type: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeAudio = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value as UrlString;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        audio: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {    \n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        title: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeBrief = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        brief: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeImage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        image: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"handleDelete \" + props.id);\n    if (props.onDeleteTask) {\n      props.onDeleteTask(props.id);\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        action={\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        }\n        title={tr_TaskType(props.tasktype)}\n        subheader={\n          <>\n            <Typography color=\"textSecondary\">{props.id}</Typography>\n          </>\n        }\n      />\n\n      <CardContent>\n        <Grid container spacing={2} alignItems=\"stretch\">\n          <Grid item xs={12}>\n            <TextField\n              id=\"title\"\n              size=\"small\"\n              label=\"Тип\"\n              select\n              value={type ?? \"\"}\n              onChange={handleChangeType}\n              fullWidth\n              required\n              variant=\"outlined\"\n            >\n              <MenuItem key=\"unknown\" value=\"\"></MenuItem>\n              <MenuItem key=\"meditation\" value=\"meditation\">Медитация</MenuItem>\n              <MenuItem key=\"breathe\" value=\"breathe\">Дыхание</MenuItem>\n              <MenuItem key=\"sleep\" value=\"sleep\">Сон</MenuItem>\n              <MenuItem key=\"background\" value=\"background\">Фоновая музыка</MenuItem>\n            </TextField>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"image\"\n              size=\"small\"\n              label=\"Mp3 файл\"\n              helperText=\"URL / ссылка на доступный по http/https файл\"\n              value={audio ?? \"\"}\n              onChange={handleChangeAudio}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"title\"\n              size=\"small\"\n              label=\"Заголовок\"\n              helperText=\"Если пусто, берётся из метаданных mp3\"\n              value={title ?? \"\"}\n              onChange={handleChangeTitle}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"brief\"\n              size=\"small\"\n              label=\"Краткое содержание\"\n              helperText=\"Если пусто, берётся из метаданных mp3\"\n              value={brief ?? \"\"}\n              onChange={handleChangeBrief}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"image\"\n              size=\"small\"\n              label=\"Изображение (ссылка)\"\n              helperText=\"Если пусто, берётся из метаданных mp3\"\n              value={image ?? \"\"}\n              onChange={handleChangeImage}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n\n    </Card>\n  );\n}\n\nexport default AudioTaskEditor;\n","import React from 'react';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Card, CardContent, IconButton, Typography, CardHeader, Grid, TextField, MenuItem } from \"@material-ui/core\";\nimport { Task, TextTask } from \"../../kyojin/tasks\";\nimport { IdString, TaskType, TextContent, TextContentType, TextType, tr_TaskType, tr_TextContentType, tr_TextType } from \"../../kyojin/types\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport { Menu } from '@material-ui/core';\n\ntype Props = {\n  id: IdString;\n  tasktype: TaskType;\n  task: Partial<TextTask>;\n\n  onEditTask?: ((task: Task) => void) | undefined;\n  onDeleteTask?: ((id: IdString) => void) | undefined;\n};\n\nfunction TextTaskEditor(props: Props) {\n\n  const type = props.task?.type;\n  const title = props.task?.title;\n  const brief = props.task?.brief;\n  const image = props.task?.image;\n  //TODO: detail: TextContent[];  //тест в формате MD перемежается со ссылками на картинки\n  //const [duration_in_min, setDuration_in_min] = React.useState<number | undefined>(props.task?.duration_in_min);\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleAddContent = (item: TextContentType) => () => {\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        detail: (props.task.detail ?? []).concat({ type: item, data: \"\" } as TextContent)\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n    setAnchorEl(null);\n  };\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleChangeType = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value as TextType;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        type: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        title: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeBrief = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        brief: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeImage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        image: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n\n\n  const handleDelete = () => {\n    console.log(\"handleDelete \" + props.id);\n    if (props.onDeleteTask) {\n      props.onDeleteTask(props.id);\n    }\n  };\n\n  const handleChangeContent = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        detail: (props.task.detail ?? []).map((d, i) => {\n          return i === index ? { type: d.type, data: v } : d\n        })\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n\n  const insert = (arr: any, index: number, newItem: any) => [\n    // part of the array before the specified index\n    ...arr.slice(0, index),\n    // inserted item\n    newItem,\n    // part of the array after the specified index\n    ...arr.slice(index)\n  ];\n\n  const remove = (arr: any, index: number) => [\n    // part of the array before the specified index\n    ...arr.slice(0, index),\n\n    // part of the array after the specified index\n    ...arr.slice(index + 1)\n  ];\n\n  const handleDeleteContent = (index: number) => () => {\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        detail: remove(props.task.detail ?? [], index)\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        action={\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        }\n        title={tr_TaskType(props.tasktype)}\n        subheader={\n          <>\n            <Typography color=\"textSecondary\">{props.id}</Typography>\n          </>\n        }\n      />\n\n      <CardContent>\n        <Grid container spacing={2} alignItems=\"stretch\">\n          <Grid item xs={12}>\n            <TextField\n              id=\"title\"\n              size=\"small\"\n              label=\"Тип\"\n              select\n              value={type ?? \"\"}\n              onChange={handleChangeType}\n              fullWidth\n              required\n              variant=\"outlined\"\n            >\n              <MenuItem key=\"unknown\" value=\"\"></MenuItem>\n              <MenuItem key=\"article\" value=\"article\">{tr_TextType(\"article\")}</MenuItem>\n              <MenuItem key=\"tale\" value=\"tale\">{tr_TextType(\"tale\")}</MenuItem>\n            </TextField>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"title\"\n              size=\"small\"\n              label=\"Заголовок\"\n              value={title ?? \"\"}\n              onChange={handleChangeTitle}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"brief\"\n              size=\"small\"\n              label=\"Краткое содержание\"\n              multiline={true}\n              value={brief ?? \"\"}\n              onChange={handleChangeBrief}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"image\"\n              size=\"small\"\n              label=\"Изображение (ссылка)\"\n              helperText=\"URL / ссылка на доступный по http/https файл\"\n              value={image ?? \"\"}\n              onChange={handleChangeImage}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography>\n              Содержание / картинки\n              <IconButton\n                edge=\"end\"\n                aria-label=\"task\"\n                onClick={handleOpenMenu}\n                title=\"Новое содержание / картинки\"\n              >\n                <AddCircleOutlineOutlinedIcon />\n              </IconButton>\n            </Typography>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleCloseMenu}\n            >\n              {[\"text\", \"imageurl\"].map(t => t as TextContentType).map(tt => (\n                <MenuItem key={tt} onClick={handleAddContent(tt)}>{tr_TextContentType(tt)}</MenuItem>\n              ))}\n            </Menu>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              {props.task.detail?.map((d, index) => (\n                <Grid item xs={12}>\n                  <Grid container spacing={2} direction=\"row\">\n                    <Grid item xs={11}>\n                      <TextField\n                        id=\"brief\"\n                        size=\"small\"\n                        label={`${index} ${tr_TextContentType(d.type)}`}\n                        multiline={d.type === \"text\"}\n                        value={d.data ?? \"\"}\n                        onChange={handleChangeContent(index)}\n                        fullWidth\n                        required\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={1}>\n                      <IconButton aria-label=\"delete\" onClick={handleDeleteContent(index)}>\n                        <DeleteIcon />\n                      </IconButton>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n\n    </Card>\n  );\n}\n\nexport default TextTaskEditor;\n","import React from 'react';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Card, CardContent, IconButton, Typography, CardHeader, Grid, TextField } from \"@material-ui/core\";\nimport { ImageTask, Task } from \"../../kyojin/tasks\";\nimport { IdString, TaskType, tr_TaskType } from \"../../kyojin/types\";\n\ntype Props = {\n  id: IdString;\n  tasktype: TaskType;\n  task: Partial<ImageTask>;\n\n  onEditTask?: ((task: Task) => void) | undefined;\n  onDeleteTask?: ((id: IdString) => void) | undefined;\n};\n\nfunction ImageTaskEditor(props: Props) {\n\n  const title = props.task?.title;\n  const brief = props.task?.brief;\n  const image = props.task?.image;\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {    \n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        title: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeBrief = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        brief: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeImage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        image: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n\n\n  const handleDelete = () => {\n    console.log(\"handleDelete \" + props.id);\n    if (props.onDeleteTask) {\n      props.onDeleteTask(props.id);\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        action={\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        }\n        title={tr_TaskType(props.tasktype)}\n        subheader={\n          <>\n            <Typography color=\"textSecondary\">{props.id}</Typography>\n          </>\n        }\n      />\n\n      <CardContent>\n        <Grid container spacing={2} alignItems=\"stretch\">\n          <Grid item xs={12}>\n            <TextField\n              id=\"title\"\n              size=\"small\"\n              label=\"Заголовок\"\n              value={title ?? \"\"}\n              onChange={handleChangeTitle}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"brief\"\n              size=\"small\"\n              label=\"Краткое содержание\"\n              value={brief ?? \"\"}\n              onChange={handleChangeBrief}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"image\"\n              size=\"small\"\n              label=\"Изображение (ссылка)\"\n              helperText=\"URL / ссылка на доступный по http/https файл\"\n              value={image ?? \"\"}\n              onChange={handleChangeImage}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n\n    </Card>\n  );\n}\n\nexport default ImageTaskEditor;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Card, CardContent, IconButton, Typography, CardHeader } from \"@material-ui/core\";\nimport { TextTask } from \"../../kyojin/tasks\";\nimport { IdString, TaskType, tr_TaskType } from \"../../kyojin/types\";\n\ntype Props = {\n  id: IdString;\n  tasktype: TaskType;\n  task: Partial<TextTask>;\n\n  onEditTextTask?: ((task: TextTask) => void) | undefined;\n  onDeleteTask?: ((id: IdString) => void) | undefined;\n};\n\nfunction TestTaskEditor(props: Props) {\n\n  const handleDelete = () => {\n    console.log(\"handleDelete \" + props.id);\n    if (props.onDeleteTask) {\n      props.onDeleteTask(props.id);\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        action={\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        }\n        title={tr_TaskType(props.tasktype)}\n        subheader={\n          <>\n            <Typography color=\"textSecondary\">{props.id}</Typography>\n          </>\n        }\n      />\n\n      <CardContent>\n        <Typography>TODO: доделать</Typography>\n      </CardContent>\n\n    </Card>\n  );\n}\n\nexport default TestTaskEditor;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Card, CardContent, IconButton, Typography, CardHeader } from \"@material-ui/core\";\nimport { TextTask } from \"../../kyojin/tasks\";\nimport { IdString, TaskType, tr_TaskType } from \"../../kyojin/types\";\n\ntype Props = {\n  id: IdString;\n  tasktype: TaskType;\n  task: Partial<TextTask>;\n\n  onEditTextTask?: ((task: TextTask) => void) | undefined;\n  onDeleteTask?: ((id: IdString) => void) | undefined;\n};\n\nfunction QuickTestTaskEditor(props: Props) {\n\n  const handleDelete = () => {\n    console.log(\"handleDelete \" + props.id);\n    if (props.onDeleteTask) {\n      props.onDeleteTask(props.id);\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        action={\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        }\n        title={tr_TaskType(props.tasktype)}\n        subheader={\n          <>\n            <Typography color=\"textSecondary\">{props.id}</Typography>\n          </>\n        }\n      />\n\n      <CardContent>\n        <Typography>TODO: доделать</Typography>\n      </CardContent>\n\n    </Card>\n  );\n}\n\nexport default QuickTestTaskEditor;\n","import React from 'react';\nimport { DayTasks, Kyojin, KyojinTypeVersion } from '../kyojin/model';\nimport { v4 as uuidv4 } from \"uuid\";\nimport moment from 'moment';\nimport FileSaver from \"file-saver\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { IdString, TaskType, UrlString } from '../kyojin/types';\nimport { AppBar, Box, Grid, IconButton, TextField, Toolbar, Tooltip, Typography } from '@material-ui/core';\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport TaskAdd from './TaskAdd';\nimport DayList from './DayList';\nimport Raw from './Raw';\nimport AudioTaskEditor from './taskeditor/AudioTaskEditor';\nimport TextTaskEditor from './taskeditor/TextTaskEditor';\nimport ImageTaskEditor from './taskeditor/ImageTaskEditor';\nimport TestTaskEditor from './taskeditor/TestTaskEditor';\nimport QuickTestTaskEditor from './taskeditor/QuickTestTaskEditor';\nimport { Task } from '../kyojin/tasks';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    // root: {\n    //   '& .MuiTextField-root': {\n    //     margin: theme.spacing(1),\n    //     width: '25ch',\n    //   },\n    // },\n    root: {\n      flexGrow: 1,\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\ntype Props = {\n  editId?: string | undefined;\n  kyojins: Kyojin[];\n  onChange: (value: Kyojin) => void;\n};\n\nconst emptyDay: DayTasks = {\n  tasks: []\n};\nfunction KyojinEditor(props: Props) {\n  const classes = useStyles();\n  const now = new Date();\n  const rev = moment(now).format(\"YYYYMMDDTHHmmss\");\n\n  const editKyojin = !!props.editId ? props.kyojins.find(w => w.id === props.editId) : undefined;\n\n  const [id, setId] = React.useState<string>(editKyojin?.id ?? uuidv4());\n  const [revision, setRevision] = React.useState<string>(editKyojin?.revision ?? rev);\n  const [name, setName] = React.useState<string | undefined>(editKyojin?.name);\n  const [thumbnail, setThumbnail] = React.useState<UrlString | undefined>(editKyojin?.thumbnail);\n  const [image, setImage] = React.useState<UrlString | undefined>(editKyojin?.image);\n  const [tasks, setTasks] = React.useState<Task[]>(editKyojin?.tasks ?? []);\n  const [days, setDays] = React.useState<DayTasks[]>(editKyojin?.days ?? [emptyDay]);\n\n  //const [description, setDescription] = React.useState<string | undefined>(props.value?.description ?? undefined);\n\n  const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n    setRevision(moment(new Date()).format(\"YYYYMMDDTHHmmss\"));\n  };\n  const handleChangeThumbnail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setThumbnail(event.target.value);\n    setRevision(moment(new Date()).format(\"YYYYMMDDTHHmmss\"));\n  };\n  const handleChangeImage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImage(event.target.value);\n    setRevision(moment(new Date()).format(\"YYYYMMDDTHHmmss\"));\n  };\n  const handleAddTask = (tasktype: TaskType) => {\n    let task: Task = {\n      id: uuidv4(),\n      tasktype: tasktype,\n    };\n    setTasks(tasks.concat([task]));\n    setRevision(moment(new Date()).format(\"YYYYMMDDTHHmmss\"));\n  };\n  const handleDeleteTask = (id: IdString) => {\n    setTasks(tasks.filter(t => t.id !== id));\n    setRevision(moment(new Date()).format(\"YYYYMMDDTHHmmss\"));\n  };\n\n  const handleEditTask = (task: Task) => {\n    setTasks(tasks.map(t => t.id !== task.id ? t : task));\n    setRevision(moment(new Date()).format(\"YYYYMMDDTHHmmss\"));\n  };\n\n  const handleDaysCount = (count: number) => {\n    if(count > days.length) {\n      //add days to array\n      const newDays = days.concat([...Array(count - days.length)].map((_, i) => ({\n        tasks: []\n      })));\n      setDays(newDays);\n    } else {\n      //remove days from array\n      setDays(days.slice(0, count));\n    }\n    //const daysArray = Array.from(Array(count).keys());\n  };\n  const handleAddDayTask = (dayNumber: number, taskId: IdString) => {   \n    setDays(days.map((d, index) => ( index === dayNumber \n        ? { tasks: d.tasks.filter(t => t !== taskId).concat([taskId]) } \n        : d\n      ) \n    ));\n  };\n  const handleRemoveDayTask = (dayNumber: number, taskId: IdString) => {\n    setDays(days.map((d, index) => ( index === dayNumber \n      ? { tasks: d.tasks.filter(t => t !== taskId) } \n      : d\n      ) \n    ));\n  };\n\n  const handleClickDownload = () => {\n    if (!name) {\n      console.log(\"no name\");\n      return;\n    }\n    if (!thumbnail) {\n      console.log(\"no thumbnail\");\n      return;\n    }\n    if (!image) {\n      console.log(\"no image\");\n      return;\n    }\n    if (!tasks || tasks.length === 0) {\n      console.log(\"no tasks\");\n      return;\n    }\n    const kyojin: Kyojin = {\n      v: KyojinTypeVersion.v1,\n      id: id,\n      revision: rev,\n      name: name!,\n      thumbnail: thumbnail!,\n      image: image!,\n      tasks: tasks,\n      days: days\n    };\n    const kyojinString = JSON.stringify(kyojin, undefined, 2);\n\n    let kyojinBlob = new Blob([kyojinString], {\n      type: \"application/json;charset=utf-8\",\n    });\n    FileSaver.saveAs(kyojinBlob, kyojin.name + \".\" + kyojin.revision + \".json\");\n  };\n\n  const handleRaw = (raw: string) => {\n    const x: Kyojin = JSON.parse(raw);\n    if (!x) {\n      //TODO: показать всплывайку\n      return;\n    }\n    \n    setId(x.id);\n    setRevision(x.revision);\n    setName(x.name);\n    setThumbnail(x.thumbnail);\n    setImage(x.image);    \n    setTasks(x.tasks);    \n    setDays(x.days);    \n  };\n\n  const now1 = new Date();\n  const rev1 = moment(now1).format(\"YYYYMMDDTHHmmss\");\n  const kyojin1: Kyojin = {\n    v: KyojinTypeVersion.v1,\n    id: id,\n    revision: rev,\n    name: name ?? \"\",\n    thumbnail: thumbnail ?? \"\",\n    image: image ?? \"\",\n    tasks: tasks,\n    days: days\n  };\n  \n  return (\n    <div>\n      <Box display=\"block\" displayPrint=\"none\">\n        <AppBar position=\"static\">\n          <Toolbar variant=\"dense\">\n            <Typography variant=\"h6\" key=\"appTitle\" className={classes.title}>\n              Редактор великанов\n            </Typography>\n            <Raw\n              isReadonly={false}\n              raw={JSON.stringify(kyojin1, undefined, 2)}\n              onChangeRaw={handleRaw}\n            />\n            <Tooltip title=\"Скачать\">\n              <IconButton\n                edge=\"end\"\n                color=\"inherit\"\n                aria-label=\"Скачать\"\n                onClick={handleClickDownload}\n              >\n                <GetAppIcon />\n              </IconButton>\n            </Tooltip>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Box>\n        <Typography>&nbsp;</Typography>\n        <Grid container spacing={2} alignItems=\"stretch\">\n          <Grid item xs={12} key=\"name\">\n            <TextField\n              id=\"name\"\n              size=\"small\"\n              label=\"Название курса\"\n              value={name ?? \"\"}\n              onChange={handleChangeName}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12} key=\"version\">\n            <TextField\n              id=\"revision\"\n              size=\"small\"\n              label=\"Версия\"\n              value={revision ?? \"\"}\n              fullWidth\n              variant=\"outlined\"\n              disabled\n            />\n          </Grid>\n          <Grid item xs={12} key=\"thumbnail\">\n            <TextField\n              id=\"thumbnail\"\n              size=\"small\"\n              label=\"Thumbnail для списка (ссылка)\"\n              value={thumbnail ?? \"\"}\n              onChange={handleChangeThumbnail}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12} key=\"image\">\n            <TextField\n              id=\"image\"\n              size=\"small\"\n              label=\"Изображение (ссылка)\"\n              value={image ?? \"\"}\n              onChange={handleChangeImage}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12} key=\"daylist\">\n            <DayList \n              daysCount={days.length}\n              daysArray={days}\n              allTasks={tasks}\n              onDaysCount={handleDaysCount}\n              onAddDayTask={handleAddDayTask}\n              onRemoveDayTask={handleRemoveDayTask}\n            />\n          </Grid>\n          <Grid item xs={12} key=\"taskadd\">\n            <TaskAdd\n              onAddTask={handleAddTask}\n            />\n          </Grid>\n          <Grid item xs={12} key=\"tasks\">\n            <Grid container spacing={2} alignItems=\"stretch\">\n              {tasks.map(t => {\n                switch (t.tasktype) {\n                  case \"audio\":\n                    return (\n                      <Grid item xs={12} sm={6} key={t.id}>\n                        <AudioTaskEditor\n                          id={t.id}\n                          tasktype={t.tasktype}\n                          task={t}\n                          onEditTask={handleEditTask}\n                          onDeleteTask={handleDeleteTask}\n                        />\n                      </Grid>\n\n                    );\n                  case \"text\":\n                    return (\n                      <Grid item xs={12} sm={6} key={t.id}>\n                        <TextTaskEditor\n                          id={t.id}\n                          tasktype={t.tasktype}\n                          task={t}\n                          onEditTask={handleEditTask}\n                          onDeleteTask={handleDeleteTask}\n                        />\n                      </Grid>\n                    );\n                  case \"image\":\n                    return (\n                      <Grid item xs={12} sm={6} key={t.id}>\n                        <ImageTaskEditor\n                          id={t.id}\n                          tasktype={t.tasktype}\n                          task={t}\n                          onEditTask={handleEditTask}\n                          onDeleteTask={handleDeleteTask}\n                        />\n                      </Grid>\n                    );\n                  case \"quicktest\":\n                    return (\n                      <Grid item xs={12} sm={6} key={t.id}>\n                        <QuickTestTaskEditor\n                          id={t.id}\n                          tasktype={t.tasktype}\n                          task={t}\n                          onDeleteTask={handleDeleteTask}\n                        />\n                      </Grid>\n                    );\n                  case \"test\":\n                    return (\n                      <Grid item xs={12} sm={6} key={t.id}>\n                        <TestTaskEditor\n                          id={t.id}\n                          tasktype={t.tasktype}\n                          task={t}\n                          onDeleteTask={handleDeleteTask}\n                        />\n                      </Grid>\n                    );\n                  default:\n                    return (\n                      <Typography>{t.id} - {t.tasktype}</Typography>\n                    );\n                }\n              })}\n            </Grid>\n\n          </Grid>\n        </Grid>\n\n      </Box>\n\n    </div>\n  );\n}\n\nexport default KyojinEditor;","import React from 'react';\nimport './App.css';\nimport KyojinEditor from './KyojinEditor';\nimport { Kyojin } from '../kyojin/model';\n\nfunction App() {\n\n  const [kyojins, setKyojins] = React.useState<Kyojin[]>([]);\n\n  const handleKyojinChange = (value: Kyojin) => {\n    setKyojins([value]);\n  };\n\n  return (\n    <div className=\"App\">\n      <KyojinEditor \n        //editId={null}\n        kyojins={kyojins}\n        onChange={handleKyojinChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}