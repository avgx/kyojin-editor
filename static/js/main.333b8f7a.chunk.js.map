{"version":3,"sources":["components/kyojin/model.ts","components/kyojin/types.ts","components/app/TaskAdd.tsx","components/app/Raw.tsx","components/app/taskeditor/AudioTaskEditor.tsx","components/app/taskeditor/TextTaskEditor.tsx","components/app/taskeditor/ImageTaskEditor.tsx","components/app/taskeditor/TestTaskEditor.tsx","components/app/taskeditor/QuickTestTaskEditor.tsx","components/app/KyojinEditor.tsx","components/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["KyojinTypeVersion","tr_TaskType","tt","useStyles","makeStyles","theme","createStyles","root","width","backgroundColor","palette","background","paper","TaskAdd","props","React","anchorEl","setAnchorEl","Paper","variant","elevation","Typography","IconButton","edge","aria-label","onClick","event","currentTarget","title","Menu","id","keepMounted","open","Boolean","onClose","map","t","MenuItem","item","onAddTask","Raw","setOpen","rawValue","setRawValue","Tooltip","aria-haspopup","color","raw","Dialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","fullWidth","aria-labelledby","DialogTitle","DialogContent","dividers","TextField","label","size","multiline","value","onChange","newValue","target","console","log","DialogActions","Button","autoFocus","onChangeRaw","disabled","isReadonly","AudioTaskEditor","type","task","audio","brief","image","Card","CardHeader","action","onDeleteTask","tasktype","subheader","CardContent","Grid","container","spacing","alignItems","xs","select","v","onEditTask","required","helperText","TextTaskEditor","ImageTaskEditor","TestTaskEditor","QuickTestTaskEditor","flexGrow","small","height","menuButton","marginRight","KyojinEditor","classes","now","Date","rev","moment","format","editKyojin","editId","kyojins","find","w","undefined","useState","uuidv4","setId","revision","setRevision","name","setName","setImage","tasks","setTasks","handleDeleteTask","filter","handleEditTask","now1","kyojin1","v1","Box","display","displayPrint","AppBar","position","Toolbar","className","JSON","stringify","x","parse","length","kyojin","kyojinString","kyojinBlob","Blob","FileSaver","saveAs","concat","sm","App","setKyojins","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.333b8f7a.chunk.js","sourcesContent":["// Тут будут описания сущностей в нашей модели данных\n\nimport { Task } from \"./tasks\";\nimport { IdString, UrlString } from \"./types\";\n\nexport enum KyojinTypeVersion {\n  v1 = 'v1'\n}\n\nexport type Kyojin = {\n  v: KyojinTypeVersion;\n  id: IdString;\n  revision: string;\n  name: string;\n  image: UrlString;\n  tasks: Task[];\n};","// Тут будут описания базовых типов в нашей модели данных\n\nexport type UrlString = string;\nexport type IdString = string;\nexport type TaskType = \"audio\" | \"text\" | \"quicktest\" | \"test\" | \"image\";\nexport type AudioType = \"meditation\" | \"breathe\" | \"sleep\" | \"background\";\nexport type TextType = \"article\" | \"tale\";\nexport type TextContentType = \"text\" | \"md\" | \"url\";\nexport type TextContent = {\n  type: TextContentType;\n  data: string | UrlString;\n}\n\nexport function tr_TaskType(tt: TaskType) {\n  switch (tt) {\n    case \"audio\":\n      return \"Аудио\";\n    case \"text\":\n      return \"Статья / История\";\n    case \"quicktest\":\n      return \"Быстрый тест\";\n    case \"test\":\n      return \"Тест\";\n    case \"image\":\n      return \"Картинка\";\n  }\n}\n\n\n","import * as React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport { Paper, Typography, IconButton, Menu, List, ListSubheader, MenuItem, Grid, Divider } from \"@material-ui/core\";\nimport { Task } from \"../kyojin/tasks\";\nimport { TaskType, tr_TaskType } from \"../kyojin/types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      backgroundColor: theme.palette.background.paper,\n    },\n  })\n);\n\ntype Props = {  \n  onAddTask: (item: TaskType) => void;  \n};\n\nfunction TaskAdd(props: Props) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const classes = useStyles();\n\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleAdd = (item: TaskType) => () => {\n    props.onAddTask(item);\n    setAnchorEl(null);\n  };\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Paper\n      variant=\"elevation\"\n      elevation={0}\n    >\n      <Typography variant=\"h6\">\n      Задания\n        <IconButton\n          edge=\"end\"\n          aria-label=\"task\"\n          onClick={handleOpenMenu}\n          title=\"Новое задание\"\n        >\n          <AddCircleOutlineOutlinedIcon />\n        </IconButton>\n      </Typography>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n      >\n        {[\"audio\", \"text\", \"quicktest\", \"test\", \"image\"].map(t => t as TaskType).map(tt => (\n          <MenuItem key={tt} onClick={handleAdd(tt)}>{tr_TaskType(tt)}</MenuItem>\n        ))}\n        {/* <MenuItem key=\"audio\" onClick={handleAdd(\"audio\")}>{tr_TaskType(\"audio\")}</MenuItem>\n        <MenuItem key=\"text\" onClick={handleAdd(\"text\")}>Статья / История</MenuItem>\n        <MenuItem key=\"quicktest\" onClick={handleAdd(\"quicktest\")}>Быстрый тест</MenuItem>\n        <MenuItem key=\"test\" onClick={handleAdd(\"test\")}>Тест</MenuItem>\n        <MenuItem key=\"image\" onClick={handleAdd(\"image\")}>Картинка</MenuItem>         */}\n      </Menu>\n    </Paper>\n  );\n}\n\nexport default TaskAdd;\n","import * as React from \"react\";\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport { Tooltip, IconButton, Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from \"@material-ui/core\";\nimport { lang } from \"moment\";\n\ntype Props = {\n  isReadonly: boolean;\n  raw: string;\n  onChangeRaw: (raw: string) => void;\n};\n\nfunction Raw(props: Props) {\n  const [open, setOpen] = React.useState(false);\n  const [rawValue, setRawValue] = React.useState(\"\");\n\n  const handleSelectRawValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value && event.target.value !== \"\" ? event.target.value : \"\";\n    console.log(\"new rawValue \" + newValue);\n    setRawValue(newValue);\n  };\n\n  const handleClickRawOpen = () => {\n    setOpen(true);\n    setRawValue(props.raw);\n  };\n\n  const handleRawCancel = () => {\n    setOpen(false);\n    setRawValue(\"\");\n  };\n\n  const handleRawSet = () => {\n    setOpen(false);\n\n    props.onChangeRaw(rawValue);\n    setRawValue(\"\");\n  };\n\n  return (\n    <div>\n      <Tooltip title=\"Show the full source. Copy/Paste enabled.\">\n        <IconButton\n          aria-label=\"raw\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          onClick={handleClickRawOpen}\n        >\n          <CodeIcon />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        maxWidth=\"xs\"\n        fullWidth\n        aria-labelledby=\"confirmation-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Raw</DialogTitle>\n        <DialogContent dividers>\n          <TextField\n            id=\"value-textfield\"\n            label=\"Value\"\n            size=\"small\"\n            fullWidth\n            multiline\n            value={rawValue}\n            onChange={handleSelectRawValue}\n            variant=\"outlined\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleRawCancel} color=\"primary\">Cancel</Button>\n          <Button\n            onClick={handleRawSet}\n            color=\"primary\"\n            disabled={props.isReadonly}>Set</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Raw;\n","import React, { version } from \"react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Card, CardContent, CardActions, IconButton, Typography, CardHeader, Grid, TextField, MenuItem } from \"@material-ui/core\";\nimport { AudioTask, Task } from \"../../kyojin/tasks\";\nimport { IdString, TaskType, AudioType, UrlString, tr_TaskType } from \"../../kyojin/types\";\n\ntype Props = {\n  id: IdString;\n  tasktype: TaskType;\n  task: Partial<AudioTask>;\n\n  onEditTask?: ((task: Task) => void) | undefined;\n  onDeleteTask?: ((id: IdString) => void) | undefined;\n};\n\nfunction AudioTaskEditor(props: Props) {\n\n  const type = props.task?.type;\n  const audio = props.task?.audio;\n\n  const title = props.task?.title;\n  const brief = props.task?.brief;\n  const image = props.task?.image;\n\n  //TODO: detail: TextContent[];  //тест в формате MD перемежается со ссылками на картинки\n  //const [duration_in_min, setDuration_in_min] = React.useState<number | undefined>(props.task?.duration_in_min);\n\n  const handleChangeType = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value as AudioType;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        type: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeAudio = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value as UrlString;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        audio: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {    \n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        title: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeBrief = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        brief: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeImage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        image: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n\n  const handleDelete = () => {\n    console.log(\"handleDelete \" + props.id);\n    if (props.onDeleteTask) {\n      props.onDeleteTask(props.id);\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        action={\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        }\n        title={tr_TaskType(props.tasktype)}\n        subheader={\n          <>\n            <Typography color=\"textSecondary\">{props.id}</Typography>\n          </>\n        }\n      />\n\n      <CardContent>\n        <Grid container spacing={2} alignItems=\"stretch\">\n          <Grid item xs={12}>\n            <TextField\n              id=\"title\"\n              size=\"small\"\n              label=\"Тип\"\n              select\n              value={type ?? \"\"}\n              onChange={handleChangeType}\n              fullWidth\n              required\n              variant=\"outlined\"\n            >\n              <MenuItem key=\"unknown\" value=\"\"></MenuItem>\n              <MenuItem key=\"meditation\" value=\"meditation\">Медитация</MenuItem>\n              <MenuItem key=\"breathe\" value=\"breathe\">Дыхание</MenuItem>\n              <MenuItem key=\"sleep\" value=\"sleep\">Сон</MenuItem>\n              <MenuItem key=\"background\" value=\"background\">Фоновая музыка</MenuItem>\n            </TextField>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"image\"\n              size=\"small\"\n              label=\"Mp3 файл\"\n              helperText=\"URL / ссылка на доступный по http/https файл\"\n              value={audio ?? \"\"}\n              onChange={handleChangeAudio}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"title\"\n              size=\"small\"\n              label=\"Заголовок\"\n              helperText=\"Если пусто, берётся из метаданных mp3\"\n              value={title ?? \"\"}\n              onChange={handleChangeTitle}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"brief\"\n              size=\"small\"\n              label=\"Краткое содержание\"\n              helperText=\"Если пусто, берётся из метаданных mp3\"\n              value={brief ?? \"\"}\n              onChange={handleChangeBrief}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"image\"\n              size=\"small\"\n              label=\"Изображение (ссылка)\"\n              helperText=\"Если пусто, берётся из метаданных mp3\"\n              value={image ?? \"\"}\n              onChange={handleChangeImage}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n\n    </Card>\n  );\n}\n\nexport default AudioTaskEditor;\n","import React, { version } from \"react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Card, CardContent, CardActions, IconButton, Typography, CardHeader, Grid, TextField, MenuItem } from \"@material-ui/core\";\nimport { Task, TextTask } from \"../../kyojin/tasks\";\nimport { IdString, TaskType, TextType, tr_TaskType, UrlString } from \"../../kyojin/types\";\n\ntype Props = {\n  id: IdString;\n  tasktype: TaskType;\n  task: Partial<TextTask>;\n\n  onEditTask?: ((task: Task) => void) | undefined;\n  onDeleteTask?: ((id: IdString) => void) | undefined;\n};\n\nfunction TextTaskEditor(props: Props) {\n\n  const type = props.task?.type;\n  const title = props.task?.title;\n  const brief = props.task?.brief;\n  const image = props.task?.image;\n  //TODO: detail: TextContent[];  //тест в формате MD перемежается со ссылками на картинки\n  //const [duration_in_min, setDuration_in_min] = React.useState<number | undefined>(props.task?.duration_in_min);\n\n  const handleChangeType = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value as TextType;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        type: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {    \n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        title: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeBrief = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        brief: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeImage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        image: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n\n\n  const handleDelete = () => {\n    console.log(\"handleDelete \" + props.id);\n    if (props.onDeleteTask) {\n      props.onDeleteTask(props.id);\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        action={\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        }\n        title={tr_TaskType(props.tasktype)}\n        subheader={\n          <>\n            <Typography color=\"textSecondary\">{props.id}</Typography>\n          </>\n        }\n      />\n\n      <CardContent>\n        <Grid container spacing={2} alignItems=\"stretch\">\n          <Grid item xs={12}>\n            <TextField\n              id=\"title\"\n              size=\"small\"\n              label=\"Тип\"\n              select\n              value={type ?? \"\"}\n              onChange={handleChangeType}\n              fullWidth\n              required\n              variant=\"outlined\"\n            >\n              <MenuItem key=\"unknown\" value=\"\"></MenuItem>\n              <MenuItem key=\"article\" value=\"article\">Статья</MenuItem>\n              <MenuItem key=\"tale\" value=\"tale\">История</MenuItem>\n            </TextField>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"title\"\n              size=\"small\"\n              label=\"Заголовок\"\n              value={title ?? \"\"}\n              onChange={handleChangeTitle}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"brief\"\n              size=\"small\"\n              label=\"Краткое содержание\"\n              value={brief ?? \"\"}\n              onChange={handleChangeBrief}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"image\"\n              size=\"small\"\n              label=\"Изображение (ссылка)\"\n              helperText=\"URL / ссылка на доступный по http/https файл\"\n              value={image ?? \"\"}\n              onChange={handleChangeImage}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n\n    </Card>\n  );\n}\n\nexport default TextTaskEditor;\n","import React, { version } from \"react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Card, CardContent, CardActions, IconButton, Typography, CardHeader, Grid, TextField, MenuItem } from \"@material-ui/core\";\nimport { ImageTask, Task } from \"../../kyojin/tasks\";\nimport { IdString, TaskType, TextType, tr_TaskType, UrlString } from \"../../kyojin/types\";\n\ntype Props = {\n  id: IdString;\n  tasktype: TaskType;\n  task: Partial<ImageTask>;\n\n  onEditTask?: ((task: Task) => void) | undefined;\n  onDeleteTask?: ((id: IdString) => void) | undefined;\n};\n\nfunction ImageTaskEditor(props: Props) {\n\n  const title = props.task?.title;\n  const brief = props.task?.brief;\n  const image = props.task?.image;\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {    \n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        title: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeBrief = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        brief: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n  const handleChangeImage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    if (props.onEditTask) {\n      const t = {\n        ...props.task,\n        image: v\n      };\n      props.onEditTask(t as Task);  //TODO: вероятно надо чтоб было наследование\n    }\n  };\n\n\n  const handleDelete = () => {\n    console.log(\"handleDelete \" + props.id);\n    if (props.onDeleteTask) {\n      props.onDeleteTask(props.id);\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        action={\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        }\n        title={tr_TaskType(props.tasktype)}\n        subheader={\n          <>\n            <Typography color=\"textSecondary\">{props.id}</Typography>\n          </>\n        }\n      />\n\n      <CardContent>\n        <Grid container spacing={2} alignItems=\"stretch\">\n          <Grid item xs={12}>\n            <TextField\n              id=\"title\"\n              size=\"small\"\n              label=\"Заголовок\"\n              value={title ?? \"\"}\n              onChange={handleChangeTitle}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"brief\"\n              size=\"small\"\n              label=\"Краткое содержание\"\n              value={brief ?? \"\"}\n              onChange={handleChangeBrief}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"image\"\n              size=\"small\"\n              label=\"Изображение (ссылка)\"\n              helperText=\"URL / ссылка на доступный по http/https файл\"\n              value={image ?? \"\"}\n              onChange={handleChangeImage}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n\n    </Card>\n  );\n}\n\nexport default ImageTaskEditor;\n","import React, { version } from \"react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Card, CardContent, CardActions, IconButton, Typography, CardHeader, Grid, TextField, MenuItem } from \"@material-ui/core\";\nimport { TextTask } from \"../../kyojin/tasks\";\nimport { IdString, TaskType, TextType, tr_TaskType, UrlString } from \"../../kyojin/types\";\n\ntype Props = {\n  id: IdString;\n  tasktype: TaskType;\n  task: Partial<TextTask>;\n\n  onEditTextTask?: ((task: TextTask) => void) | undefined;\n  onDeleteTask?: ((id: IdString) => void) | undefined;\n};\n\nfunction TestTaskEditor(props: Props) {\n\n  const handleDelete = () => {\n    console.log(\"handleDelete \" + props.id);\n    if (props.onDeleteTask) {\n      props.onDeleteTask(props.id);\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        action={\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        }\n        title={tr_TaskType(props.tasktype)}\n        subheader={\n          <>\n            <Typography color=\"textSecondary\">{props.id}</Typography>\n          </>\n        }\n      />\n\n      <CardContent>\n        <Typography>TODO: доделать</Typography>\n      </CardContent>\n\n    </Card>\n  );\n}\n\nexport default TestTaskEditor;\n","import React, { version } from \"react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Card, CardContent, CardActions, IconButton, Typography, CardHeader, Grid, TextField, MenuItem } from \"@material-ui/core\";\nimport { TextTask } from \"../../kyojin/tasks\";\nimport { IdString, TaskType, TextType, tr_TaskType, UrlString } from \"../../kyojin/types\";\n\ntype Props = {\n  id: IdString;\n  tasktype: TaskType;\n  task: Partial<TextTask>;\n\n  onEditTextTask?: ((task: TextTask) => void) | undefined;\n  onDeleteTask?: ((id: IdString) => void) | undefined;\n};\n\nfunction QuickTestTaskEditor(props: Props) {\n\n  const handleDelete = () => {\n    console.log(\"handleDelete \" + props.id);\n    if (props.onDeleteTask) {\n      props.onDeleteTask(props.id);\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader\n        action={\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        }\n        title={tr_TaskType(props.tasktype)}\n        subheader={\n          <>\n            <Typography color=\"textSecondary\">{props.id}</Typography>\n          </>\n        }\n      />\n\n      <CardContent>\n        <Typography>TODO: доделать</Typography>\n      </CardContent>\n\n    </Card>\n  );\n}\n\nexport default QuickTestTaskEditor;\n","import React from 'react';\nimport { Kyojin, KyojinTypeVersion } from '../kyojin/model';\nimport { v4 as uuidv4 } from \"uuid\";\nimport moment from 'moment';\nimport FileSaver from \"file-saver\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { IdString, TaskType, UrlString } from '../kyojin/types';\nimport { AppBar, Box, Grid, IconButton, Paper, TextField, Toolbar, Tooltip, Typography } from '@material-ui/core';\nimport { title } from 'process';\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport TaskAdd from './TaskAdd';\nimport Raw from './Raw';\nimport AudioTaskEditor from './taskeditor/AudioTaskEditor';\nimport TextTaskEditor from './taskeditor/TextTaskEditor';\nimport ImageTaskEditor from './taskeditor/ImageTaskEditor';\nimport TestTaskEditor from './taskeditor/TestTaskEditor';\nimport QuickTestTaskEditor from './taskeditor/QuickTestTaskEditor';\nimport { Task } from '../kyojin/tasks';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    // root: {\n    //   '& .MuiTextField-root': {\n    //     margin: theme.spacing(1),\n    //     width: '25ch',\n    //   },\n    // },\n    root: {\n      flexGrow: 1,\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\ntype Props = {\n  editId?: string | undefined;\n  kyojins: Kyojin[];\n  onChange: (value: Kyojin) => void;\n};\n\nfunction KyojinEditor(props: Props) {\n  const classes = useStyles();\n  const now = new Date();\n  const rev = moment(now).format(\"YYYYMMDDTHHmmss\");\n\n  const editKyojin = !!props.editId ? props.kyojins.find(w => w.id === props.editId) : undefined;\n\n  const [id, setId] = React.useState<string>(editKyojin?.id ?? uuidv4());\n  const [revision, setRevision] = React.useState<string>(editKyojin?.revision ?? rev);\n  const [name, setName] = React.useState<string | undefined>(editKyojin?.name);\n  const [image, setImage] = React.useState<UrlString | undefined>(editKyojin?.image);\n  const [tasks, setTasks] = React.useState<Task[]>(editKyojin?.tasks ?? []);\n\n  //const [description, setDescription] = React.useState<string | undefined>(props.value?.description ?? undefined);\n\n  const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n    setRevision(moment(new Date()).format(\"YYYYMMDDTHHmmss\"));\n  };\n  const handleChangeImage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImage(event.target.value);\n    setRevision(moment(new Date()).format(\"YYYYMMDDTHHmmss\"));\n  };\n  const handleAddTask = (tasktype: TaskType) => {\n    let task: Task = {\n      id: uuidv4(),\n      tasktype: tasktype,\n    };\n    setTasks(tasks.concat([task]));\n    setRevision(moment(new Date()).format(\"YYYYMMDDTHHmmss\"));\n  };\n  const handleDeleteTask = (id: IdString) => {\n    setTasks(tasks.filter(t => t.id !== id));\n    setRevision(moment(new Date()).format(\"YYYYMMDDTHHmmss\"));\n  };\n\n  const handleEditTask = (task: Task) => {\n    setTasks(tasks.map(t => t.id !== task.id ? t : task));\n    setRevision(moment(new Date()).format(\"YYYYMMDDTHHmmss\"));\n  };\n\n  const handleClickDownload = () => {\n    if (!name) {\n      console.log(\"no name\");\n      return;\n    }\n    if (!image) {\n      console.log(\"no image\");\n      return;\n    }\n    if (!tasks || tasks.length === 0) {\n      console.log(\"no tasks\");\n      return;\n    }\n    const kyojin: Kyojin = {\n      v: KyojinTypeVersion.v1,\n      id: id,\n      revision: rev,\n      name: name!,\n      image: image!,\n      tasks: tasks\n    };\n    const kyojinString = JSON.stringify(kyojin, undefined, 2);\n\n    let kyojinBlob = new Blob([kyojinString], {\n      type: \"application/json;charset=utf-8\",\n    });\n    FileSaver.saveAs(kyojinBlob, kyojin.name + \".\" + kyojin.revision + \".json\");\n  };\n\n  const handleRaw = (raw: string) => {\n    const x: Kyojin = JSON.parse(raw);\n    if (!x) {\n      //TODO: показать всплывайку\n      return;\n    }\n    \n    setId(x.id);\n    setRevision(x.revision);\n    setName(x.name);\n    setImage(x.image);    \n    setTasks(x.tasks);    \n  };\n\n  const now1 = new Date();\n  const rev1 = moment(now1).format(\"YYYYMMDDTHHmmss\");\n  const kyojin1: Kyojin = {\n    v: KyojinTypeVersion.v1,\n    id: id,\n    revision: rev,\n    name: name ?? \"\",\n    image: image ?? \"\",\n    tasks: tasks\n  };\n  \n  return (\n    <div>\n      <Box display=\"block\" displayPrint=\"none\">\n        <AppBar position=\"static\">\n          <Toolbar variant=\"dense\">\n            <Typography variant=\"h6\" key=\"appTitle\" className={classes.title}>\n              Редактор великанов\n            </Typography>\n            <Raw\n              isReadonly={false}\n              raw={JSON.stringify(kyojin1, undefined, 2)}\n              onChangeRaw={handleRaw}\n            />\n            <Tooltip title=\"Скачать\">\n              <IconButton\n                edge=\"end\"\n                color=\"inherit\"\n                aria-label=\"Скачать\"\n                onClick={handleClickDownload}\n              >\n                <GetAppIcon />\n              </IconButton>\n            </Tooltip>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Box>\n        <Typography>&nbsp;</Typography>\n        <Grid container spacing={2} alignItems=\"stretch\">\n          <Grid item xs={12} key=\"name\">\n            <TextField\n              id=\"title-text\"\n              size=\"small\"\n              label=\"Имя\"\n              value={name ?? \"\"}\n              onChange={handleChangeName}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12} key=\"version\">\n            <TextField\n              id=\"title-text\"\n              size=\"small\"\n              label=\"Версия\"\n              value={revision ?? \"\"}\n              fullWidth\n              variant=\"outlined\"\n              disabled\n            />\n          </Grid>\n          <Grid item xs={12} key=\"image\">\n            <TextField\n              id=\"title-text\"\n              size=\"small\"\n              label=\"Изображение (ссылка)\"\n              value={image ?? \"\"}\n              onChange={handleChangeImage}\n              fullWidth\n              required\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12} key=\"taskadd\">\n            <TaskAdd\n              onAddTask={handleAddTask}\n            />\n          </Grid>\n          <Grid item xs={12} key=\"tasks\">\n            <Grid container spacing={2} alignItems=\"stretch\">\n              {tasks.map(t => {\n                switch (t.tasktype) {\n                  case \"audio\":\n                    return (\n                      <Grid item xs={12} sm={6} key={t.id}>\n                        <AudioTaskEditor\n                          id={t.id}\n                          tasktype={t.tasktype}\n                          task={t}\n                          onEditTask={handleEditTask}\n                          onDeleteTask={handleDeleteTask}\n                        />\n                      </Grid>\n\n                    );\n                  case \"text\":\n                    return (\n                      <Grid item xs={12} sm={6} key={t.id}>\n                        <TextTaskEditor\n                          id={t.id}\n                          tasktype={t.tasktype}\n                          task={t}\n                          onEditTask={handleEditTask}\n                          onDeleteTask={handleDeleteTask}\n                        />\n                      </Grid>\n                    );\n                  case \"image\":\n                    return (\n                      <Grid item xs={12} sm={6} key={t.id}>\n                        <ImageTaskEditor\n                          id={t.id}\n                          tasktype={t.tasktype}\n                          task={t}\n                          onEditTask={handleEditTask}\n                          onDeleteTask={handleDeleteTask}\n                        />\n                      </Grid>\n                    );\n                  case \"quicktest\":\n                    return (\n                      <Grid item xs={12} sm={6} key={t.id}>\n                        <QuickTestTaskEditor\n                          id={t.id}\n                          tasktype={t.tasktype}\n                          task={t}\n                          onDeleteTask={handleDeleteTask}\n                        />\n                      </Grid>\n                    );\n                  case \"test\":\n                    return (\n                      <Grid item xs={12} sm={6} key={t.id}>\n                        <TestTaskEditor\n                          id={t.id}\n                          tasktype={t.tasktype}\n                          task={t}\n                          onDeleteTask={handleDeleteTask}\n                        />\n                      </Grid>\n                    );\n                  default:\n                    return (\n                      <Typography>{t.id} - {t.tasktype}</Typography>\n                    );\n                }\n              })}\n            </Grid>\n\n          </Grid>\n        </Grid>\n\n      </Box>\n\n    </div>\n  );\n}\n\nexport default KyojinEditor;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport KyojinEditor from './KyojinEditor';\nimport { Kyojin } from '../kyojin/model';\n\nfunction App() {\n\n  const [kyojins, setKyojins] = React.useState<Kyojin[]>([]);\n\n  const handleKyojinChange = (value: Kyojin) => {\n    setKyojins([value]);\n  };\n\n  return (\n    <div className=\"App\">\n      <KyojinEditor \n        //editId={null}\n        kyojins={kyojins}\n        onChange={handleKyojinChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}